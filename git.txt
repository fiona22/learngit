
安装Git：
在Windows上使用Git，可以从Git官网直接下载安装程序，（网速慢的同学请移步国内镜像），然后按默认选项安装即可。
安装完成后，在开始菜单里找到“Git”->“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！

安装完成后，还需要最后一步设置，在命令行输入：
$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"
===========================================================

创建版本库：
初始化一个Git仓库，使用git init命令。

添加文件到Git仓库，分两步：
第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；
第二步，使用命令git commit，可以一次commit多个文件。
===================================================================
穿梭机：
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。
穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

================================================================
Git是如何跟踪修改：每次修改，如果不add到暂存区，那就不会加入到commit中。
======================================================================
撤销修改：
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

======================================================================
删除文件：
命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容

git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。

=====================================================================
比如执行了
rm text.txt 误删了那怎么恢复呢
很简单
执行
git checkout -- text.txt 把版本库的东西重新写回工作区就行了

如果执行了
git rm text.txt 我们会发现工作区的text.txt也删除了
执行 git status 会看到
Changes to be committed:
表示其实这个命令相当于
rm text.txt
git add text.txt
如果想恢复可以参考上一节内容
先清除暂存区一下就行了,再从版本库写回到工作区
git reset head text.txt
git checkout -- text.txt 
如果真的想从版本库里面删除文件可以继续执行
git commit -m "delete text.txt"
提交后最新的版本库将不包含这个文件

还有一点就是如果版本库已经不包含这个文件了，有后悔误删了，这时就可以执行版本回退类似
git reset --hard head^
====================================================================
添加远程库：
要关联一个远程库，使用命令git remote add origin git@github.com:fiona22/learn.git；
关联后，使用命令git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；
